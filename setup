#!/bin/sh

red=`tput setaf 1`
green=`tput setaf 2`
yellow=`tput setaf 3`
reset=`tput sgr0`

echo "${red}...Cleaning up${reset}"
pkgs="
wolfram-engine
libreoffice*
xpdf
omxplayer
claws-mail
minecraft-pi
sonic-pi
scratch
scratch2
"
for i in $pkgs; do
	sudo apt-get -y remove --purge $i
done
sudo apt-get clean
sudo apt-get -y autoremove

echo "${red}...Refreshing Package List${reset}"
sudo apt-get update

echo "${green}Upgrade Raspberry Pi? (y/n)${reset}"
read yn
if [ $yn = y ]; then
	#============================
    #Don't Update kernel (LCD driver requirement)
	sudo apt-mark hold raspberrypi-bootloader
	sudo apt-mark hold raspberrypi-kernel
		#----------------------------
		#System Updates
		sudo apt-get -y upgrade
		#----------------------------
	sudo apt-mark unhold raspberrypi-bootloader
	sudo apt-mark unhold raspberrypi-kernel
	#============================
fi

echo "${red}...Installing Web Browser${reset}"
sudo apt-get -y install chromium-browser
#sudo aptitude install iceweasel -y

echo "${red}...Installing Web Server${reset}"
sudo apt-get install -y php5-common php5-cgi php5

htmlLocation="/var/www/html"
echo "...Installing Web Files ${htmlLocation}"
if [ $(dirname "$0") != $htmlLocation ]; then
	sudo mkdir -p $htmlLocation
	sudo cp -rf ./* $htmlLocation
fi

echo "${red}...Setting Web Server Permissions${reset}"
sudo mkdir -p /var/www/html
sudo adduser www-data www-data
sudo chown -R www-data:www-data /var/www
sudo chmod 755 /var/www
sudo usermod -a -G www-data pi

echo "${red}...Backing up config${reset}"
configLocation="/boot/config.txt"
if [ ! -f "${configLocation}.bak" ]; then
    sudo cp "${configLocation}" "${configLocation}.bak"
fi

echo "${red}...Setting TTY Permissions${reset}"
sudo apt-get install -y minicom
ls -la /dev/ttyAMA0
sudo systemctl enable serial-getty@ttyAMA0.service
sudo usermod -a -G dialout www-data
sudo usermod -a -G tty www-data
#UART on the Pi-3 you will need to disable bluetooth
sudo sh -c "sudo echo '
enable_uart=1
dtoverlay=pi3-miniuart-bt' >> /boot/config.txt"

echo "${green}Auto-Start Full Screen Kiosk Mode? (y/n)${reset}"
read yn
if [ $yn = y ]; then
	sudo apt-get install x11-xserver-utils
	autostart="/home/pi/.config/lxsession/LXDE-pi/autostart"
	sudo sh -c "sudo echo '#@xscreensaver -no-splash' > ${autostart}"
	sudo sh -c "sudo echo '@xset -dpms # disable DPMS (Energy Star) features' >> ${autostart}"
	sudo sh -c "sudo echo '@xset s off # disable screen saver' >> ${autostart}"
	sudo sh -c "sudo echo '@xset s noblank # dont blank the video device' >> ${autostart}"
	sudo sh -c "sudo echo 'chromium-browser --noerrdialogs --kiosk http://127.0.0.1:8080 --incognito' >> ${autostart}"
 	sudo chmod 755 $autostart
	rclocal="/etc/rc.local"
	sudo sh -c "sudo echo '#!/bin/sh -e' > ${rclocal}"
	sudo sh -c "sudo echo 'sudo -u www-data php -S 0.0.0.0:8080 -t /var/www/html/ &' >> ${rclocal}"
	sudo sh -c "sudo echo 'exit 0' >> ${rclocal}"
	sudo chmod 755 $rclocal
else
	sudo cp -f /etc/xdg/lxsession/LXDE-pi/autostart /home/pi/.config/lxsession/LXDE-pi/autostart
fi

echo "${green}Enable SSH? (y/n)${reset}"
read yn
if [ $yn = y ]; then
    sudo systemctl enable ssh
    sudo systemctl start ssh
fi

echo "${green}Enable VNC? (y/n)${reset}"
read yn
if [ $yn = y ]; then
	sudo vncinitconfig -service-daemon
	sudo systemctl enable vncserver-x11-serviced.service
	sudo systemctl start vncserver-x11-serviced.service
fi

kernel_version_current=`uname -a|awk '{print $3}'`
kernel_version_needed="4.4.50-v7"

echo "${green}Install CH340 Driver for Kernel ${kernel_version_needed}? (y/n)${reset}"
read yn
if [ $yn = y ]; then
	#cd /lib/modules/$(uname -r)/kernel/drivers/usb/serial
	sudo cp -f ./drivers/CH340/ch34x.ko "/lib/modules/${kernel_version_needed}/kernel/drivers/usb/serial"
	sudo modprobe ./drivers/CH340/ch34x.ko
	:'
	#https://github.com/aperepel/raspberrypi-ch340-driver
	sudo apt-get -y install gcc-4.8 g++-4.8
	sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 50
	sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 50
	sudo apt-get -y install linux-headers-rpi
	sudo wget https://raw.githubusercontent.com/notro/rpi-source/master/rpi-source -O /usr/bin/rpi-source && sudo chmod +x /usr/bin/rpi-source && /usr/bin/rpi-source -q --tag-update
	sudo apt-get -y install bc
	sudo apt-get -y install libncurses5-dev
	rpi-source
	cd ./drivers/CH340
	make
	make load
	'
fi

echo "${green}Install RFID Drivers? (y/n)${reset}"
cd ~/Downloads
read yn
if [ $yn = y ]; then
	wget http://www.airspayce.com/mikem/bcm2835/bcm2835-1.52.tar.gz
	tar zxvf bcm2835-1.52.tar.gz
	cd bcm2835-1.52
	./configure
	make
	sudo make check
	sudo make install
	
	cd "$(dirname "$0")/drivers/RPi-RFID"
	make
	:'
	+ ---------------- + ------- + ------------ +
	| Name/Signal      | MFRC522 | Raspberry Pi |
	+ ================ + ======= + ============ +
	| VCC              | 3.3V    | 1 (3V3)      |
	+ ---------------- + ------- + ------------ +
	| RST/Reset        | RST     | 22 (GPIO25)  |
	+ ---------------- + ------- + ------------ +
	| GND              | GND     | Any ground   |
	+ ---------------- + ------- + ------------ +
	| SPI MISO         | MISO    | 21 (GPIO9)   |
	+ ---------------- + ------- + ------------ +
	| SPI MOSI         | MOSI    | 19 (GPIO10)  |
	+ ---------------- + ------- + ------------ +
	| SPI SCK          | SCK     | 23 (GPIO11)  |
	+ ---------------- + ------- + ------------ +
	| SPI SS (SOA/NSS) | SDA     | 24 (GPIO8)   |
	+ ---------------- + ------- + ------------ +
	| IRQ              | IRQ     | None         |
	+ ---------------- + ------- + ------------ +
	MISO = Master Input, Slave Output
	MOSI = Master Output, Slave Input
	'
	
	if [ ! grep -q "dtoverlay=spi0-hw-cs" $configLocation ]; then
  		sudo sh -c "sudo echo 'dtparam=spi=on' >> ${configLocation}"
  		sudo sh -c "sudo echo 'dtoverlay=spi0-hw-cs' >> ${configLocation}"
 	fi
fi

echo "${green}Install LCD Drivers? (y/n)${reset}"
cd ~/Downloads
read yn
if [ $yn = y ]; then
	if [ $kernel_version_current != $kernel_version_needed ]; then
	    echo "${yellow}Your kernel version is ${kernel_version_current}${reset}"
	    echo "${yellow}LCD works with kernel ${kernel_version_needed}${reset}"
	    echo "${red}...Installing kernel ${kernel_version_needed}${reset}"
		sudo apt-get install rpi-update -y
		sudo rpi-update 5224108
	fi
	if [ ! -f LCD_show_v6_1_3.tar.gz ]; then
	    echo "${yellow}...Downloading LCD Driver${reset}"
		wget http://kedei.net/raspberry/v6_1/LCD_show_v6_1_3.tar.gz
	fi
    echo "${yellow}...Extracting TAR${reset}"
	tar -xzvf LCD_show_v6_1_3.tar.gz
	
	echo "${red}...Switching to LCD${reset}"
    cd LCD_show_v6_1_3
	sudo ./LCD35_v
fi

echo "${green}Reboot now? (y/n)${reset}"
read yn
if [ $yn = y ]; then
	sudo reboot
fi